// $backgroundColor: rgb(240, 240, 240);
// $headerBackground: rgb(255,255,255);
$blue: rgb(88, 160, 255);
$darkBlue: rgb(50, 67, 221);
$pink: rgb(226, 93, 226);
$btnLine: 1px solid rgb(212, 212, 212);


/*
 * Theme definitions
 */

 $themes: (
    light: (
      backgroundColor: rgb(240, 240, 240),
      headerBackground: rgb(255,255,255),
      textColor: rgb(34, 34, 34),
      textColor2: rgb(59, 59, 59),
      shadow: 1px 4px 5px 3px rgba(209, 209, 209, 0.45),
      navbarColor: rgba(255, 255, 255, 0.80),
      buttonTextColor: #408bbd,
      buttonTextTransform: none,
      buttonTextHoverColor: #61b0e7,
      buttonColor: #fff,
      buttonBorder: 2px solid #408bbd,
    ),
    dark: (
      backgroundColor: rgb(55, 55, 55),
      headerBackground: rgb(70, 70, 70),
      textColor:rgb(230, 230, 230),
      textColor2: rgb(211, 211, 211),
      shadow:0px 0px 0px 0px,
      navbarColor: rgba(85, 85, 85, 0.80),
      buttonTextColor: #aaa,
      buttonTextTransform: uppercase,
      buttonTextHoverColor: #ddd,
      buttonColor: #333,
      buttonBorder: 1px solid #333,
    ),
  );
  
  /*
   * Implementation of themes
   */
  @mixin themify($themes) {
    @each $theme, $map in $themes {
      .theme-#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
  }
  
  @function themed($key) {
    @return map-get($theme-map, $key);
  }